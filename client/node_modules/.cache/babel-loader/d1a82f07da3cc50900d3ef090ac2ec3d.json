{"ast":null,"code":"var _jsxFileName = \"/Users/galsinay/dev/billing-client/src/components/TransactionsList/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './TransactionsList.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport DetailsModal from '../DetailsModal/DetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionsList({\n  transactions,\n  deleteItem,\n  editItem\n}) {\n  _s();\n\n  const [currentTransaction, setCurrentTransactions] = useState(null);\n  const [isNewItem, setIsNewItem] = useState(false);\n\n  function viewDetails(transaction) {\n    setCurrentTransactions(transaction);\n  }\n\n  function closeDetails() {\n    setCurrentTransactions(null);\n    setIsNewItem(false);\n  }\n\n  function deleteTransaction(event, transaction) {\n    event.stopPropagation();\n    deleteItem(transaction._id);\n  }\n\n  function editTransaction(editetTransaction) {\n    editItem(editetTransaction);\n    closeDetails();\n  }\n\n  function addTransaction(editetTransaction) {\n    console.log(editetTransaction);\n  }\n\n  function transactionValidation(transaction) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entitysList\",\n    children: [currentTransaction ? /*#__PURE__*/_jsxDEV(DetailsModal, {\n      transaction: currentTransaction,\n      closeDetails: closeDetails,\n      editTransaction: editetTransaction => editTransaction(editetTransaction),\n      isNewItem: isNewItem,\n      addTransaction: editetTransaction => addTransaction(editetTransaction)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => {\n          viewDetails({\n            customer_id: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            gender: \"\",\n            country: \"\",\n            city: \"\",\n            street: \"\",\n            phone: \"\",\n            total_price: \"\",\n            currency: \"\",\n            cerdit_card_type: \"\",\n            cerdit_card_number: \"\"\n          });\n          setIsNewItem(true);\n        },\n        className: 'EntitysItem',\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), transactions.map(transaction => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          active: currentTransaction && currentTransaction.customer_id === transaction.customer_id,\n          className: 'EntitysItem',\n          onClick: () => viewDetails(transaction),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: `${transaction.first_name} ${transaction.last_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'btns-container',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u270E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: event => deleteTransaction(event, transaction),\n              children: \"\\u2717\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, transaction.customer_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"K+6RoDTKeZgiVibpWMRP2cWytV0=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/Users/galsinay/dev/billing-client/src/components/TransactionsList/TransactionsList.js"],"names":["React","useState","ListGroup","DetailsModal","TransactionsList","transactions","deleteItem","editItem","currentTransaction","setCurrentTransactions","isNewItem","setIsNewItem","viewDetails","transaction","closeDetails","deleteTransaction","event","stopPropagation","_id","editTransaction","editetTransaction","addTransaction","console","log","transactionValidation","customer_id","first_name","last_name","email","gender","country","city","street","phone","total_price","currency","cerdit_card_type","cerdit_card_number","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './TransactionsList.css';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport DetailsModal from '../DetailsModal/DetailsModal'\n\nfunction TransactionsList({transactions, deleteItem, editItem}) {\n  const [currentTransaction, setCurrentTransactions] = useState(null);\n  const [isNewItem, setIsNewItem] = useState(false);\n\n\n  function viewDetails(transaction){\n    setCurrentTransactions(transaction);\n  }\n\n  function closeDetails(){\n    setCurrentTransactions(null);\n    setIsNewItem(false);\n  }\n\n  function deleteTransaction(event,transaction){\n    event.stopPropagation();\n    deleteItem(transaction._id);\n  }\n\n  function editTransaction(editetTransaction){\n    editItem(editetTransaction);\n    closeDetails();\n  }\n\n  function addTransaction(editetTransaction){\n    console.log(editetTransaction)\n  }\n\n  function transactionValidation(transaction){\n\n  }\n\n  return (\n    <div className=\"entitysList\">\n      {currentTransaction ? (\n        <DetailsModal \n          transaction={currentTransaction}\n          closeDetails={closeDetails}\n          editTransaction={(editetTransaction)=>editTransaction(editetTransaction)}\n          isNewItem={isNewItem}\n          addTransaction={(editetTransaction)=>addTransaction(editetTransaction)}\n        ></DetailsModal>) : null}\n      <ListGroup>\n        <ListGroup.Item \n          onClick={()=>{viewDetails({\n            customer_id: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            gender: \"\",\n            country: \"\",\n            city: \"\",\n            street: \"\",\n            phone: \"\",\n            total_price: \"\",\n            currency: \"\",\n            cerdit_card_type: \"\",\n            cerdit_card_number: \"\"\n          });  setIsNewItem(true)}}\n          className={'EntitysItem'}\n        >Add Transaction</ListGroup.Item>\n        {transactions.map(transaction => {return (\n            <ListGroup.Item\n                key={transaction.customer_id}\n                active={currentTransaction && currentTransaction.customer_id === transaction.customer_id}\n                className={'EntitysItem'}\n                onClick={()=>viewDetails(transaction)}\n            >\n              <div>{`${transaction.first_name} ${transaction.last_name}`}</div>\n              <div className={'btns-container'}>\n                <div>✎</div>\n                <div onClick={(event)=>deleteTransaction(event,transaction)}>✗</div>\n              </div>\n\n            </ListGroup.Item>)})}\n      </ListGroup>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}